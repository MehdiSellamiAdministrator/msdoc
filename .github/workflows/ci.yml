name: ci

on:
  push:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
      # Step 1: Check out the code repository 
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Dotnet Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x
      - run: dotnet tool update -g docfx
      - run: docfx D:\msdocs\docs\docfx.json
      - run: npm run lint
        shell: bash
        working-directory: templates
      - run: npm test
        shell: bash
        working-directory: templates
      - run: choco install wkhtmltopdf
        if: matrix.os == 'windows-latest'
      - run: dotnet test -c Release -f net8.0 --no-build --collect:"XPlat Code Coverage"
      - uses: codecov/codecov-action@v3
        if: matrix.os == 'ubuntu-latest'
      - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- docs/docfx.json
      - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- metadata samples/seed/docfx.json
      - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- metadata samples/seed/docfx.json --outputFormat markdown --output samples/seed/md
      - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- metadata samples/seed/docfx.json --outputFormat markdown --output samples/seed/md2 --namespaceLayout nested --memberLayout separatePages
      - run: dotnet run -c Release --no-build -f net8.0 --project src/docfx -- build samples/seed/docfx.json --output docs/_site/seed
      - uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: site
          path: docs/_site

  publish-docs:
    if: github.ref == 'refs/heads/master'
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: site
        path: site

    # Create the gh-pages branch
    - name: Create gh-pages branch
      run: |
        git checkout --orphan gh-pages
        git reset --hard
        git commit --allow-empty -m "Initial commit to gh-pages"
        git branch -M gh-pages
        git push -u origin gh-pages

    # Copy the contents of the "site" folder to the gh-pages branch
    - name: Copy site folder to gh-pages
      run: |
        git checkout main -- site/
        git add site/
        git commit -m "Update site folder in gh-pages"
        git push origin gh-pages

    # Clean up the workspace
    - name: Clean up
      run: |
        git checkout main
        git branch -D gh-pages
        
    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site  # Set the path to your specific folder

  